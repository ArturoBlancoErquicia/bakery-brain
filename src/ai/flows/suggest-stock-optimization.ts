// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A stock optimization suggestion AI agent.
 *
 * - suggestStockOptimization - A function that handles the stock optimization suggestion process.
 * - SuggestStockOptimizationInput - The input type for the suggestStockOptimization function.
 * - SuggestStockOptimizationOutput - The return type for the suggestStockOptimization function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestStockOptimizationInputSchema = z.object({
  salesForecast: z
    .string()
    .describe('The sales forecast for the next week for each product.'),
  inventoryLevels: z
    .string()
    .describe('The current inventory levels for each product.'),
  productCategory: z
    .string()
    .describe('The category of the product, for example: bread, pastries, cakes'),
  pastSalesData: z
    .string()
    .describe(
      'Past sales data of the product, to understand trends and seasonality.'
    ),
});
export type SuggestStockOptimizationInput = z.infer<
  typeof SuggestStockOptimizationInputSchema
>;

const SuggestStockOptimizationOutputSchema = z.object({
  product: z.string().describe('The name of the product.'),
  optimizationStrategy: z.string().describe('The suggested stock optimization strategy.'),
  reasoning: z
    .string()
    .describe('The reasoning behind the suggested strategy.'),
  suggestedOrderQuantity: z
    .number()
    .describe('The suggested order quantity for the product.'),
});

export type SuggestStockOptimizationOutput = z.infer<
  typeof SuggestStockOptimizationOutputSchema
>;

export async function suggestStockOptimization(
  input: SuggestStockOptimizationInput
): Promise<SuggestStockOptimizationOutput> {
  return suggestStockOptimizationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestStockOptimizationPrompt',
  input: {schema: SuggestStockOptimizationInputSchema},
  output: {schema: SuggestStockOptimizationOutputSchema},
  prompt: `You are an expert bakery inventory manager.

You will use the provided sales forecast, inventory levels, and past sales data to suggest stock optimization strategies for each product.

Sales Forecast: {{{salesForecast}}}
Inventory Levels: {{{inventoryLevels}}}
Product Category: {{{productCategory}}}
Past Sales Data: {{{pastSalesData}}}

Consider factors like spoilage, seasonality, and upcoming events to provide the best possible advice.

Propose a strategy, the reasoning behind it, and a suggested order quantity.
`,
});

const suggestStockOptimizationFlow = ai.defineFlow(
  {
    name: 'suggestStockOptimizationFlow',
    inputSchema: SuggestStockOptimizationInputSchema,
    outputSchema: SuggestStockOptimizationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
